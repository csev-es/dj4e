{

"title": "Django for Everybody (DJ4E)",
"description" : "Hello and welcome to my site where you can work through these modules and learn develop Python / Django database-backed web applications.",
"count": true,
"required_modules": [
    "https://github.com/tsugitools/gift",
    "https://github.com/tsugitools/youtube",
    "https://github.com/tsugitools/peer-grade"
],
"badges": [
],
"modules": [
{
    "title": "Introduction to Dynamic Web Content",
    "anchor": "rrc",
    "icon" : "fa-refresh",
    "description": "We look at the basic structure of a web application and how a web browser interacts with a web server.   We explore the Request-Response Cycle that is the basis of the Hypertext Transfer Protocol (HTTP).",
    "slides": "lectures/Web-01-HTTP.pptx",
    "videos" : [
        {
            "title" : "Web Applications and the Request/Response Cycle",
            "youtube" : "ZT8uqIEG92o"
        },
        {
            "title" : "Exploring the HyperText Transfer Protocol",
            "youtube" : "Q5YIrYkrVXg"
        },
        {
            "title" : "Using Sockets to Make Network Connections in Python",
            "youtube" : "RDvlb_XgVyI"
        },
        {
            "title" : "Building a Simple Web Browser in Python",
            "youtube" : "Fxgw_BxZg2I"
        },
        {
            "title" : "Building a Simple HTTP Server in Python",
            "youtube" : "PNt8zXl7EJ0"
        },
        {
            "title" : "Understanding Browser Developer Mode",
            "youtube" : "0JsWY3pmdak"
        }
    ],
    "references" : [
        {
            "title" : "Hypertext Transfer Protocol",
            "href" : "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
        },
        {
            "title" : "What Happens When You Click a Link? - Computerphile",
            "href" : "https://www.youtube.com/watch?v=keo0dglCj7I"
        }
    ],
    "lti" : [
        {
            "title" : "Quiz: Request-Response Cycle",
            "launch" : "mod/gift/?quiz=01-Request-Response.txt",
            "resource_link_id" : "dj4e_01_rrc_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        },
        {
        "title" : "Autograder: Request-Response Cycle",
        "launch" : "tools/http/",
        "resource_link_id" : "dj4e_01_rrc",
        "custom" : [
            {
                "key": "exercise",
                "value": "http_headers.php"
            }
        ]
        }
    ]
},
{
    "title": "Installing Django on PythonAnywhere",
    "anchor": "dj4e_install",
    "icon" : "fa-clone",
    "description": "This walks through the installation steps for Django on PythonAnywhere.  If you cannot use PythonAnywhere, you can also install Django locally and submit assignments your local computer for grading.  Installing Django locally will be described in an upcoming lesson.",
    "videos" : [
    {
        "title": "Installing Django on PythonAnywhere",
        "youtube": "d32UKww3h1c"
    }
  ],
    "assignment" : "{apphome}/assn/dj4e_install.md",
    "lti" : [
        {
            "title" : "Quiz: Django Tutorial 1 Concepts",
            "launch" : "mod/gift/?quiz=DJ-TUT1.txt",
            "resource_link_id" : "dj4e_01_tut_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        },
        {
        "title" : "Auto-grader: Installing Django",
        "launch" : "tools/dj-tutorial/",
        "resource_link_id" : "dj4e_install",
        "custom" : [
            {
                "key": "exercise",
                "value": "tutorial01.php"
            }
        ]
        }
    ],
    "references" : [
        {
            "title" : "PythonAnywhere",
            "href" : "https://www.pythonanywhere.com/"
        },
        {
            "title" : "Writing your first Django app, part 1",
            "href" : "https://docs.djangoproject.com/es/3.0/intro/tutorial01/"
        },
        {
            "title" : "Setting up the django.org tutorial on PythonAnywhere",
            "href" : "https://help.pythonanywhere.com/pages/FollowingTheDjangoTutorial/"
        },
        {
            "title" : "Using ngrok to submit a local application to the Autograder (optional)",
            "href" : "/ngrok"
        }
    ]
},
{
    "title": "HyperText Markup Language (HTML)",
    "anchor": "html",
    "icon" : "fa-html5",
    "description": "We briefly cover the basics of the HyperText Markup Language (HTML) that is the markup for web pages.  The recorded lectures are from Web Applications for Everybody.",
    "slides": "lectures/Web-02-HTML.pptx",
    "videos" : [
        {
            "title" : "HTML - HyperText Markup Language (Part 1)",
            "youtube" : "yWmJSO5xQlU"
        },
        {
            "title" : "HTML - HyperText Markup Language (Part 2)",
            "youtube" : "fh3omoEiebQ"
        },
        {
            "title" : "HTML - Sample Code Walkthrough",
            "youtube" : "wYc6l28v7Cs"
        }
    ],
    "references" : [
        {
            "title" : "HTML Sample Code (Browse)",
            "href" : "{apphome}/code/html/index.htm"
        },
        {
            "title" : "HTML Sample Code (Download ZIP)",
            "href" : "{apphome}/code/html.zip"
        }
    ],
    "assignment" : "{apphome}/assn/dj4e_html.md",
    "lti" : [
        {
            "title" : "Quiz: HTML",
            "launch" : "mod/gift/?quiz=00-HTML.txt",
            "resource_link_id" : "dj4e_01_html_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        },
        {
        "title" : "Autograder: HyperText Markup Language (HTML)",
        "launch" : "tools/html-autograde/",
        "resource_link_id" : "html_01",
        "custom" : [
            {
                "key": "exercise",
                "value": "a01.php"
            }
        ]
        }
    ]
},
{
    "title": "Cascading Style Sheets (CSS)",
    "anchor": "css",
    "icon" : "fa-css3",
    "description": "We briefly cover the basics of cascading Style Sheets (CSS) that allow us to style the markup for web pages.",
    "slides": "lectures/Web-03-CSS.ppt",
    "videos" : [
        {
            "title" : "CSS - Cascading Style Sheets - (Part 1)",
            "youtube" : "blWx62Js7T0"
        },
        {
            "title" : "CSS - Cascading Style Sheets - (Part 2)",
            "youtube" : "nMU8wMgasJ8"
        },
        {
            "title" : "CSS - Cascading Style Sheets - (Part 3)",
            "youtube" : "7KWtFdqXiqE"
        },
        {
            "title" : "CSS - Sample Code Walkthrough (Part 1)",
            "youtube" : "2Eu96WnoHBY"
        },
        {
            "title" : "CSS - Sample Code Walkthrough (Part 2)",
            "youtube" : "MHqI-PKBl_A"
        }
    ], 
    "assignment" : "{apphome}/assn/css/index.php",
    "references" : [
        {
            "title" : "CSS Sample Code (Browse)",
            "href" : "{apphome}/code/css/index.htm"
        },
        {
            "title" : "CSS Sample Code (Download ZIP)",
            "href" : "{apphome}/code/css.zip"
        },
        {
            "title" : "Web Developer Plugin by Chris Pedrick",
            "href" : "https://chrispederick.com/"
        },
        {
            "title" : "CSS Cheat Sheet by Leslie Frank",
            "href" : "http://www.lesliefranke.com/files/reference/csscheatsheet.html"
        }
    ],
    "lti" : [
        {
        "title" : "Quiz: CSS",
        "launch" : "mod/gift/?quiz=00-CSS.txt",
        "resource_link_id" : "php_01_css_quiz"
        },
        {
        "title": "Peer Graded: Cascading Style Sheets (CSS)",
        "launch" : "mod/peer-grade/",
        "resource_link_id" : "css",
        "custom" : [
            {
                "key": "config",
                "json": 
{
  "title": "Cascading Style Sheets",
  "description": "In this assignment you will develop a Cascading Style Sheet (CSS) to control, the look, feel, and layout of some provide HTML content.",
  "grading": "This is a relatively simple assignment.  Don't take off points for little mistakes.  If they seem to have done the assignment give them full credit.   Feel free to make suggestions if there are small mistakes.  Please keep your comments positive and useful.  If you do not take grading seriously, the instructors may delete your response and you will lose points.",
  "assignment" : "http://www.dj4e.com/assn/css/",
  "parts": [
    {
      "title": "Image (JPG or PNG) of your index.htm with the styling applied",
      "type": "image"
    },
    {
      "title": "Please paste the source code of your blocks.css file",
      "type": "code",
      "code": "css"
    },
    {
      "title": "Image (JPG or PNG) of your blocks.css passing the W3 CSS validator",
      "type": "image"
    },
    {
      "title": "Image (JPG or PNG) of your browser viewing www.brainyquote.com with all styles turned off",
      "type": "image"
    },
    {
      "title": "Image (JPG or PNG) of your browser at www.brainyquote.com inspecting the navigation element to find its background color",
      "type": "image"
    }
  ],
  "totalpoints": 10,
  "instructorpoints": 0,
  "peerpoints": 4,
  "assesspoints":3,
  "minassess": 2,
  "maxassess": 6,
  "flag": true,
  "resubmit":"on"
}
            }
        ]
        }
        ]
},
{
    "title": "Basic SQL",
    "anchor": "dj4e_basic_sql",
    "icon" : "fa-database",
    "description": "This is a quick look at databases in general and the basic operations (CRUD) in Structured Query Language (SQL). We don't go too far into SQL because we will be using Django's model capabilities to build the databases for our application.",
    "videos" : [
    {
        "title": "How Databases Work",
        "youtube": "C1QXYMNTEVs"
    },
    {
        "title": "Introduction to Structured Query Language (SQL)",
        "youtube": "wtU7Pp6VFoE"
    },
    {
        "title": "Demonstration: Basic SQL",
        "youtube": "2Or6_sSyl7c"
    }
   ],
    "slides": "lectures/SQL-01-Basics.pptx",
    "lti" : [
        {
            "title" : "Quiz: SQL",
            "launch" : "mod/gift/?quiz=04-SQL.txt",
            "resource_link_id" : "dj4e_04_sql_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        },
        {
        "title" : "Auto-grader: Basic SQL",
        "launch" : "tools/sqlite/",
        "resource_link_id" : "dj4e_basic_sql",
        "custom" : [
            {
                "key": "exercise",
                "value": "single_lite.php"
            }
        ]
        }
    ],
    "references" : [
        {
            "title" : "Sample SQLite Command Line Operations (SQL-01-Basics.txt)",
            "href": "{apphome}/lectures/SQL-01-Basics.txt"
        },
        {
            "title" : "PythonAnywhere",
            "href" : "https://www.pythonanywhere.com/"
        },
        {
            "title" : "Liz Fong: Creating the SQL Database Standards",
            "href": "https://www.youtube.com/watch?v=rLUm3vst87g"
        },
        {
            "title" : "Documentation: Command Shell for SQLite",
            "href": "https://www.sqlite.org/cli.html"
        },
        {
            "title" : "SQLite Browser",
            "href": "https://sqlitebrowser.org/"
        }
    ]
},
{
    "title": "Django Data Models",
    "anchor": "dj4e_modules",
    "icon" : "fa-database",
    "description": "This section explores how we define models in Django and then we build the data models and explore the administration interface for our application.",
    "slides": "lectures/DJ-02-Model-Single.pptx",
    "videos" : [
    {
        "title": "Django Data Models",
        "youtube": "AqsPifp-ccc"
    },
    {
        "title": "Data Model Migration in Django",
        "youtube": "YqARGlI6bGc",
        "todo" : "Need to make migration fit better in DJ-02",
        "project": "DJ 03 Many 05 Migrate"
    },
    {
        "title": "Demonstration: Django Single Table Models",
        "youtube": "p5K5hFiJ-GI"
    },
    {
        "title": "Demonstration: Resetting your Django database on PythonAnywhere",
        "project": "tut2 reset database edit",
        "youtube": "GOQIJbTSzoQ"
    }
   ],
    "lti" : [
        {
        "title" : "Auto-grader: Django Tutorial part 2",
        "launch" : "tools/dj-tutorial/",
        "resource_link_id" : "dj4e_tut_2",
        "learning_objectives": "models / admin",
        "custom" : [
            {
                "key": "exercise",
                "value": "tutorial02.php"
            }
        ]
        },
        {
            "title" : "Quiz: Django Tutorial 2",
            "launch" : "mod/gift/?quiz=DJ-TUT2.txt",
            "resource_link_id" : "dj4e_03_tut2_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ],
    "references" : [
        {
            "title" : "Writing your first Django app, part 2",
            "href": "https://docs.djangoproject.com/es/3.0/intro/tutorial02/"
        },
        {
            "title" : "Django Data Model Commands (DJ-02-Model-Single.txt)",
            "href": "{apphome}/lectures/DJ-02-Model-Single.txt"
        },
        {
            "title" : "Documentation: Command Shell for SQLite",
            "href": "https://www.sqlite.org/cli.html"
        },
        {
            "title" : "SQLite Browser",
            "href": "https://sqlitebrowser.org/"
        }
    ]
},
{
    "title": "Understanding Model View Controller (MVC) ",
    "anchor": "dj4e_mvc",
    "icon" : "fa-home",
    "description": "We cover the concept of the Model-View-Controller (MVC) in web applications.",
    "slides": "lectures/DJ-05-MVC.pptx",
    "videos" : [
    {
        "title": "Model View Controller in Django",
        "youtube": "XvWG5KMncOU",
        "project": "DJ 05 MVC"
    }
   ],
    "lti" : [
        {
            "title" : "Quiz: Model-View-Controller",
            "launch" : "mod/gift/?quiz=05-MVC.txt",
            "resource_link_id" : "dj4e_01_mvc_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ],
    "references" : [
        {
            "title" : "Model-View-Controller (Wikipedia)",
            "href": "https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller"
        },
        {
            "title" : "Django and MVC (FAQ)",
            "href": "https://docs.djangoproject.com/es/3.0/faq/general/#django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names"
        }
    ]
},
{
    "title": "Django Views and Templates",
    "anchor": "django_views",
    "icon" : "fa-align-left",
    "slides": "lectures/DJ-06-Views-Templates.pptx",
    "description": "We finally get to looking at the core of a Django application - the views and templates.",
    "videos" : [
    {
        "title": "URL Routing in Django",
        "youtube": "AQFC13D2mRM",
        "project": "DJ 06 Views 01 Urls"
    },
    {
        "title": "Django Views",
        "youtube": "9Qk4vJMssMo",
        "project": "DJ 06 Views 02 Views"
    },
    {
        "title": "Inside Django Views and HTML Escaping in Django",
        "youtube": "SAAWE4Hz6Mk",
        "project": "DJ 06 Views 03 Detail"
    },
    {
        "title": "Using Templates in Django",
        "youtube": "mTvWrpMGWBA",
        "project": "DJ 06 Views 04 Templates"
    },
    {
        "title": "Using the Django Template Language (DTL)",
        "youtube": "teL44ugGpSs",
        "project": "DJ 06 Views 05 DTL"
    },
    {
        "title": "Django Template Inheritance",
        "youtube": "IMgml67lH9Y",
        "project": "DJ 06 Views 06 Inherit"
    },
    {
        "title": "Reversing Django URLs",
        "youtube": "YT60BZJjySg",
        "project": "DJ 06 Views 07 Reverse"
    }
   ],
    "lti" : [
        {
            "title" : "Quiz: Views and Templates",
            "launch" : "mod/gift/?quiz=06-Views-Templates.txt",
            "resource_link_id" : "dj4e_06_views_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        },
        {
        "title" : "Auto-grader: Django Tutorial part 3",
        "launch" : "tools/dj-tutorial/",
        "resource_link_id" : "dj4e_tut_3",
        "learning_objectives": "Views / templates",
        "custom" : [
            {
                "key": "exercise",
                "value": "tutorial03.php"
            }
        ]
        },
        {
            "title" : "Quiz: Django Tutorial 3",
            "launch" : "mod/gift/?quiz=DJ-TUT3.txt",
            "resource_link_id" : "dj4e_tut3_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ],
    "references" : [
        {
            "title" : "Writing your first Django app, part 3",
            "href": "https://docs.djangoproject.com/es/3.0/intro/tutorial03/"
        },
        {
            "title" : "Django URL Routing",
            "href": "https://docs.djangoproject.com/es/3.0/topics/http/urls/"
        },
        {
            "title" : "Django Templates",
            "href": "https://docs.djangoproject.com/es/3.0/topics/templates/"
        },
        {
            "title" : "Django Template Tags and Filters",
            "href": "https://docs.djangoproject.com/es/3.0/ref/templates/builtins/"
        },
        {
            "title" : "Django HttpRequest Object",
            "href": "https://docs.djangoproject.com/es/3.0/ref/request-response/#django.http.HttpRequest"
        },
        {
            "title" : "Django HttpResponse Object",
            "href": "https://docs.djangoproject.com/es/3.0/ref/request-response/#django.http.HttpResponse"
        },
        {
            "title" : "Cross-Site Scripting (XSS)",
            "href": "https://en.wikipedia.org/wiki/Cross-site_scripting"
        },
        {
            "title" : "HTTP Status Codes",
            "href": "https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"
        },
        {
            "title" : "Django URL Resolving",
            "href": "https://docs.djangoproject.com/es/3.0/topics/http/urls/#reverse-resolution-of-urls"
        }
    ]
},
{
    "title": "Object-Oriented Programming in Python",
    "anchor": "Objects",
    "icon" : "fa-cubes",
    "description": "We do a quick look at how Python supports the Object-Oriented programming pattern.",
    "slides": "https://www.py4e.com/lectures3/Pythonlearn-14-Objects.pptx",
    "references" : [
        {
            "title" : "Chapter 14: Python Objects",
            "href" : "https://www.py4e.com/html3/14-objects"
        }
    ],
    "videos" : [
        {
            "title" : "Objects Part 1",
            "youtube" : "u9xZE5t9Y30"
        },
        {
            "title" : "Objects Part 2",
            "youtube" : "b2vc5uzUfoE"
        },
        {
            "title" : "Objects Part 3",
            "youtube" : "bal0Fv6QE9w"
        },
        {
            "title" : "Objects Part 4",
            "youtube" : "EE9PaHPPm2w"
        }
    ],
    "lti" : [
        {
            "title" : "Quiz: Object-Oriented Programming",
            "launch" : "mod/gift/?quiz=16-Python-Objects.txt",
            "resource_link_id" : "dj4e_16_oo_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ]
},
{
    "title": "Django Generic Views",
    "anchor": "django_generic",
    "icon" : "fa-align-left",
    "slides": "lectures/DJ-07-Views-Generic.pptx",
    "description": "We look at the generic views capability within Django.",
    "videos" : [
    {
        "title": "Understanding Django Generic Views",
        "youtube": "uPRabryhv5k",
        "project": "DJ 07 Views 08 Generic"
    }
   ],
    "lti" : [
        {
            "title" : "Quiz: Generic Views",
            "launch" : "mod/gift/?quiz=07-Views-Generic.txt",
            "resource_link_id" : "dj4e_07_generic_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ],
    "references" : [
        {
            "title" : "Review: Object-Oriented Programming in Python",
            "href": "https://www.py4e.com/lessons/Objects"
        },
        {
            "title" : "Writing your first Django app, part 4",
            "href": "https://docs.djangoproject.com/es/3.0/intro/tutorial04/"
        },
        {
            "title" : "Django Template Tags and Filters",
            "href": "https://docs.djangoproject.com/es/3.0/ref/templates/builtins/"
        },
        {
            "title" : "Django Documentation: Generic display views",
            "href": "https://docs.djangoproject.com/es/3.0/ref/class-based-views/generic-display/"
        },
        {
            "title" : "Django Documentation: Generic list display views",
            "href": "https://docs.djangoproject.com/es/3.0/ref/class-based-views/generic-display/#django.views.generic.detail.ListView"
        },
        {
            "title" : "Django Documentation: Generic detail display views",
            "href": "https://docs.djangoproject.com/es/3.0/ref/class-based-views/generic-display/#django.views.generic.detail.DetailView"
        }
    ]
},
{
    "title": "Forms in HTTP, and HTML",
    "anchor": "dj4e_forms_html",
    "icon" : "fa-table",
    "description": "We cover how GET and POST work, how forms are constructed from HTML, how we protect our applications against Cross-Site Scripting Forgery (CSRF), and how we handle browser refreshes after POST.",
    "slides": "lectures/DJ-08-Forms-HTML.pptx",
    "videos" : [
    {
        "title": "Forms, GET, POST, and HTTP",
        "project" : "DJ-10-Forms-01-getpost",
        "youtube": "KqH0Pu2ZnIg"
    },
    {
        "title": "Building HTML Forms",
        "project" : "DJ-10-Forms-02-HTML",
        "youtube": "iXgnkxwzZzM"
    },
    {
        "title": "Forms and Cross Site Request Forgery (CSRF)",
        "project" : "DJ-10-Forms-03-CSRF",
        "youtube": "j-vdshWK9Lc"
    },
    {
        "title": "CSRF Support in Django",
        "project" : "DJ-10-Forms-04-Form-CSRF",
        "youtube": "w9Y6tIVGUTI"
    },
    {
        "title": "The POST Refresh Pattern",
        "project" : "DJ-10-Forms-05-Refresh",
        "youtube": "Cug7pkRWQM0"
    },
    {
        "title": "Implementing POST Redirect in Django",
        "project" : "DJ-10-Forms-06-Redirect",
        "youtube": "a_ahU4F1V2g"
    }
   ],
    "lti" : [
        {
            "title" : "Quiz: HTML Forms",
            "launch" : "mod/gift/?quiz=10-Forms-HTML.txt",
            "resource_link_id" : "dj4e_html_forms_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        },
        {
        "title" : "Auto-grader: Django Tutorial part 4",
        "launch" : "tools/dj-tutorial/",
        "resource_link_id" : "dj4e_tut_4",
        "learning_objectives": "Forms / CSRF / DB update / Generic Views",
        "custom" : [
            {
                "key": "exercise",
                "value": "tutorial04.php"
            }
        ]
        },
        {
            "title" : "Quiz: Django Tutorial 4",
            "launch" : "mod/gift/?quiz=DJ-TUT4.txt",
            "resource_link_id" : "dj4e_tut4_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ],
    "references" : [
        {
            "title" : "Django Template Tags and Filters",
            "href": "https://docs.djangoproject.com/es/3.0/ref/templates/builtins/"
        },
        {
            "title" : "Writing your first Django app, part 4",
            "href": "https://docs.djangoproject.com/es/3.0/intro/tutorial04/"
        }
    ]
},
{
    "title": "Cookies and Sessions",
    "anchor": "dj4e_sessions",
    "icon" : "fa-cookie",
    "description": "We explore how cookies work in the browser and how to set and read cookies in Django.  We then explore how cookies are used to support sessions in Django and how we use sessions in Django.",
    "slides": "lectures/DJ-09-Cookies-Sessions.pptx",
    "assignment" : "{apphome}/assn/dj4e_hello.md",
    "videos" : [
    {
        "title": "Cookies in Browsers and Django",
        "project" : "DJ-08-Cookies-01-Cookies",
        "youtube": "C75IW38hKI8"
    },
    {
        "title": "Using Sessions in Django",
        "project" : "DJ-08-Cookies-02-Sessions",
        "youtube": "RjykNmVdcgI"
    }
   ],
    "lti" : [
        {
            "title" : "Quiz: Cookies and Sessions",
            "launch" : "mod/gift/?quiz=09-Cookies-Sessions.txt",
            "resource_link_id" : "dj4e_09_cookie_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        },
        {
        "title" : "Auto-grader: Cookies!",
        "launch" : "tools/cookies/",
        "learning_objectives": "Cookies",
        "resource_link_id" : "dj4e_cookie"
        },
        {
        "title" : "Auto-grader: Hello World",
        "launch" : "tools/dj-tutorial/",
        "learning_objectives": "Cookies / Sessions / DIY",
        "resource_link_id" : "dj4e_hello",
        "custom" : [
            {
                "key": "exercise",
                "value": "hello05.php"
            }
        ]
        }
    ],
    "references" : [
    ]
},
{
    "title": "Django Users and Authentication",
    "anchor": "dj4e_users",
    "icon" : "fa-key",
    "description": "This exercise explores the interaction between authentication and our application.",
    "slides": "lectures/DJ-10-Login.pptx",
    "videos" : [
    {
        "title": "Creating and Managing Users in Django",
        "project" : "DJ-09-Login-01-Users", 
        "youtube": "E_X5Kr6xmNY"
    },
    {
        "title": "Login and Logout URLs in Django",
        "project" : "DJ-09-Login-02-Urls", 
        "youtube": "tNofsgLH7c4"
    },
    {
        "title": "Login and Views in Django",
        "project" : "DJ-09-Login-03-Views", 
        "youtube": "n5Xwqz1IJck"
    }
   ],
    "lti" : [
        {
            "title" : "Quiz: Login and Authentication",
            "launch" : "mod/gift/?quiz=10-Login.txt",
            "resource_link_id" : "dj4e_10_login_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ],
    "references" : [
    ]
},
{
    "title": "Forms in Django",
    "anchor": "dj4e_forms_django",
    "icon" : "fa-table",
    "description": "We cover how to use the Django built in forms processing to futher simplify our view processing.",
    "slides": "lectures/DJ-11-Forms-Django.pptx",
    "videos" : [
    {
        "title": "Using Django Forms Capabilities",
        "project" : "DJ-10-Forms-07-FormsPy",
        "youtube": "bYlgvmAPrp0"
    },
    {
        "title": "Data Validation with Django Forms",
        "project" : "DJ-10-Forms-08-Validation",
        "youtube": "kRXiMIFKzoQ"
    }
   ],
    "lti" : [
        {
            "title" : "Quiz: Django Forms",
            "launch" : "mod/gift/?quiz=11-Django-Forms.txt",
            "resource_link_id" : "dj4e_forms_django",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ],
    "references" : [
        {
            "title" : "Django Template Tags and Filters",
            "href": "https://docs.djangoproject.com/es/3.0/ref/templates/builtins/"
        }
    ]
},
{
    "title": "One-To-Many Data Models",
    "anchor": "dj4e_one_to_many",
    "icon" : "fa-university",
    "description": "We explore the design of one-to-many data models.",
    "slides": "lectures/DJ-03-One-To-Many.pptx",
    "videos" : [
    {
        "title": "One-to-Many Models Overview",
        "youtube": "vgyYEE7XDzw",
        "project": "DJ 03 Many 01 Overview"
    },
    {
        "title": "Removing Replication in One-to-Many Models",
        "youtube": "JCQYxILYNIE",
        "project": "DJ 03 Many 02 Replication"
    },
    {
        "title": "Storing Primary and Foreign Keys in a Database",
        "youtube": "xmyE-zQaBEI",
        "project": "DJ 03 Many 03 Physical"
    },
    {
        "title": "Representing One-To-Many Models in Django",
        "youtube": "9t-bP963_jY",
        "project": "DJ 03 Many 04 Django"
    },
    {
        "title": "Using the Django Shell to Explore One-to-Many Models",
        "youtube": "ZdLpAtfWfZk",
        "project": "DJ 03 Many 06 Shell"
    },
    {
        "title": "Building a Django Batch Script to Load Data from CSV",
        "todo" : "Re-record do with one-to-many and using extensions",
        "youtube": "E8y_6S2Fc5s",
        "project" : "DJ 04 Many 04 Batch"
    }
   ],
    "assignment" : "{apphome}/assn/dj4e_load.md",
    "lti" : [
        {
            "title" : "Quiz: One to Many Data Models",
            "launch" : "mod/gift/?quiz=DB-02-One-To-Many.txt",
            "resource_link_id" : "dj4e_db_one_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        },
        {
        "title": "Peer Graded: Unesco Data Model",
        "launch" : "mod/peer-grade/",
        "resource_link_id" : "peer_model",
        "custom" : [
            {
                "key": "config",
                "json":
{
  "title": "Unesco Data Model",
  "description": "You will upload a picture of your normalized Unesco data model.  It can be a photo of a hand-drawn model or you can use a layout tool.  You should use 'Crow's Foot Notation' for your model and both ends of each line must be properly labelled with a 'one' or 'many' indication.",
  "grading": "This assignment is worth 10 points. 6 points come from your peers and 4 points come from you grading other student's submissions. Don't take off points for little mistakes.  If they seem to have done the assignment give them full credit.   Feel free to make suggestions if there are small mistakes.  Please keep your comments positive and useful.  If you do not take grading seriously, the instructors may delete your response and you will lose points.",
  "parts": [
    {
      "title": "Image (JPG or PNG) of your Unesco data model (Maximum 2MB per file)",
      "type": "image"
    }
  ],
  "gallery": "off",
  "totalpoints": "10",
  "instructorpoints": "0",
  "peerpoints": "6",
  "rating": "0",
  "assesspoints": "2",
  "minassess": "2",
  "maxassess": "5",
  "resubmit": "always",
  "autopeer": "300000",
  "notepublic": "false",
  "flag": "true",
  "galleryformat": "card"
}
            }
        ]
        },
        {
        "title" : "Auto-grader: One-to-Many Unesco Data",
        "launch" : "tools/sqlite/",
        "resource_link_id" : "dj4e_load",
        "custom" : [
            {
                "key": "exercise",
                "value": "05many.php"
            }
        ]
        }
    ],
    "references" : [
        {
            "title" : "Documentation: Command Shell for SQLite",
            "href": "https://www.sqlite.org/cli.html"
        },
        {
            "title" : "SQLite Browser",
            "href": "https://sqlitebrowser.org/"
        }
    ]
},
{
    "title": "Autos CRUD Application",
    "anchor": "dj4e_autos",
    "icon" : "fa-car",
    "description": "In this assignment we build a small CRUD application from scratch to support an autos database that we will use as a base to build on going forward.   This will serve as a way to review some of the concepts in the tutorial that we might have covered a little too quickly.",
    "assignment" : "{apphome}/assn/dj4e_autos.md",
    "videos" : [
    {
        "title": "Walkthrough of the DJ4E Autos Sample - Generic Edit Forms",
        "project": "samples autos walkthrough",
        "youtube": "3kHgAE-MidA"
    }
   ],
    "lti" : [
        {
        "title" : "Auto-grader: Autos CRUD",
        "launch" : "tools/crud/",
        "resource_link_id" : "dj4e_autos",
        "custom" : [
            {
                "key": "exercise",
                "value": "02autos.php"
            }
        ]
        }
    ],
    "references" : [
    ]
},
{
    "title": "Cats CRUD Application",
    "anchor": "dj4e_cats",
    "icon" : "fa-paw",
    "description": "This module will build a second CRUD application to make sure you know how to make new applications according to a specification.",
    "lti" : [
        {
        "title" : "Auto-grader: Cats CRUD",
        "launch" : "tools/crud/",
        "resource_link_id" : "dj4e_cats",
        "custom" : [
            {
                "key": "exercise",
                "value": "99cats.php"
            }
        ]
        }
    ]
},
{
    "title": "Putting Django Projects into GitHub (Optional)",
    "anchor": "dj4e_github",
    "icon" : "fa-github",
    "description": "This exercise uploads your Django projects on PythonAnywhere to a private repository on GitHub if you have access to private repositories.  Please do not put your assignments in a public GitHub repository. Github provides free private repositories for small numbers of collaborators.",
    "videos" : [
    {
        "title": "Using GitHub with Django and PythonAnywhere",
        "youtube": "9FJwue2Eqao"
    }
   ],
    "assignment" : "{apphome}/assn/dj4e_github.md",
    "references" : [
        {
            "title" : "GitHub",
            "href" : "https://www.github.com/"
        },
        {
            "title" : "Unlimited Free Private Repositories on GitHub",
            "href" : "https://blog.github.com/changelog/2019-01-08-pricing-changes/"
        },
        {
            "title" : "GitHub for Students",
            "href" : "https://education.github.com/students"
        },
        {
            "title" : "Caching your GitHub password in Linux",
            "href" : "https://help.github.com/articles/caching-your-github-password-in-git/#platform-linux"
        }
    ]
},
{
    "title": "Installing Django locally (optional)",
    "anchor": "dj4e_local",
    "icon" : "fa-clone",
    "description": "This is an optional exercise to install Django locally to both speed your development cycles and to play with the sample code.  The next module inludes quite a bit of new code so you will be able to develpp more quickly with Django installed locally.  You can submit your assignments from your local computer using a technology called 'ngrok'.",
    "videos" : [
    {
        "title": "Submitting Assignments Using ngrok",
        "youtube": "WLWuMjDDSa4"
    }
   ],
    "assignment" : "{apphome}/assn/dj4e_local.md",
    "references" : [
        {
            "title" : "Using ngrok to submit a local application to the Autograder",
            "href" : "/ngrok"
        }
    ]
},
{
    "title": "Owned Rows",
    "anchor": "dj4e_owned",
    "icon" : "fa-newspaper",
    "description": "We cover how we mark objects as 'owned' by Django users.",
    "slides": "lectures/DJ-12-Owned-Rows.pptx",
    "videos" : [
        {
            "title" : "Owned Rows in Django - Overview",
            "youtube" : "YTK-Sx4OUqs"
        },
        {
            "title" : "Owned Rows in Django - Generic Views Review",
            "youtube" : "z4iJ3Njbc9g"
        },
        {
            "title" : "Owned Rows in Django - owner.py",
            "youtube" : "hznUKCsk8X8"
        }
    ],
    "lti" : [
        {
            "title" : "Quiz: Owned Rows",
            "launch" : "mod/gift/?quiz=12-Owned-Rows.txt",
            "resource_link_id" : "dj4e_12_owned",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ],
    "references" : [
        {
            "title" : "Ownership of Rows",
            "href": "https://samples.dj4e.com/myarts/"
        },
        {
            "title" : "Chapter 14: Python Objects (review)",
            "href" : "https://www.py4e.com/html3/14-objects"
        }
    ]
},
{
    "title": "Classified Ads #1",
    "anchor": "dj4e_ads1",
    "icon" : "fa-newspaper",
    "description": "We explore crispy forms, and bootstrap menus and then use owned tows we write the first iteration of the classified ads application.",
    "assignment" : "{apphome}/assn/dj4e_ads1.md",
    "slides": "lectures/DJ-12-Owned-Rows.pptx",
    "videos" : [
        {
            "title" : "Walking through the DJ4E Crispy Forms (crispy) Sample Code",
            "youtube" : "iovsuP8yVUU"
        },
        {
            "title" : "Walking through the DJ4E My Articles (myarts) Sample Code",
            "youtube" : "iHvJZ_lvXB4"
        },
        {
            "title" : "Walking through the DJ4E Bootstrap Menu (menu) Sample Code",
            "youtube" : "nuz_zXWoCo8"
        }
    ],
    "lti" : [
        {
        "title" : "Auto-grader: Ad List #1",
        "launch" : "tools/crud/",
        "resource_link_id" : "dj4e_ads1",
        "custom" : [
            {
                "key": "exercise",
                "value": "11adlist1.php"
            }
        ]
        }
    ],
    "references" : [
        {
            "title" : "Crispy Forms",
            "href": "https://samples.dj4e.com/crispy/"
        },
        {
            "title" : "Ownership of Rows",
            "href": "https://samples.dj4e.com/myarts/"
        },
        {
            "title" : "Chapter 14: Python Objects (review)",
            "href" : "https://www.py4e.com/html3/14-objects"
        },
        {
            "title" : "Bootstrap / Menus",
            "href": "https://samples.dj4e.com/menu/"
        },
        {
            "title" : "Reference Implementation",
            "href": "https://chucklist.dj4e.com/"
        }
    ]
},
{
    "title": "Many-To-Many Data Models",
    "anchor": "dj4e_many",
    "icon" : "fa-arrows",
    "description": "We further explore the design of many-to-many data models and write a Django script to load comma-separated (CSV) data into many-to-many tables.",
    "slides": "lectures/DJ-04-Many-To-Many.pptx",
    "videos" : [
    {
        "title": "Many-to-Many Overview",
        "youtube": "JI4ZOFOubLY",
        "project" : "DJ 04 Many 01 Overview"
    },
    {
        "title": "A Simple Many-To-Many Example in Django",
        "youtube": "gf2-J9YOMcc",
        "project" : "DJ 04 Many 02 Many"
    },
    {
        "title": "Many-To-Many Data Models for Courses and Membership",
        "youtube": "kY_1a057phM",
        "project" : "DJ 04 Many 03 Course"
    },
    {
        "title": "Building a Django Batch Script to Load Data from CSV",
        "todo" : "Re-record batch loading using extensions",
        "youtube": "E8y_6S2Fc5s",
        "project" : "DJ 04 Many 04 Batch"
    }
   ],
    "lti" : [
        {
            "title" : "Quiz: Many-To-Many",
            "launch" : "mod/gift/?quiz=DB-04-Many-To-Many.txt",
            "resource_link_id" : "dj4e_db_04_many",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ],
    "references" : [
        {
            "title" : "UNESCO World Heritage Sites",
            "href": "https://whc.unesco.org/es/list/"
        }
    ]
},
{
    "title": "JavaScript",
    "anchor": "dj4e_javascript",
    "icon" : "fa-code",
    "description": "We take a quick look at the JavaScript language and how it is used in the browser.",
    "slides": "lectures/JS-01-JavaScript.ppt",
    "videos" : [
        {
            "title" : "JavaScript - Overview and History",
            "youtube" : "xBpKUM1CTBQ"
        },
        {
            "title" : "JavaScript - In the Browser",
            "youtube" : "wnUhEMhEeDs"
        },
        {
            "title" : "JavaScript - The Language",
            "youtube" : "BtIhwBPeyp4"
        },
        {
            "title" : "JavaScript - Functions and Arrays",
            "youtube" : "a7wPzoX9o_8"
        },
        {
            "title" : "JavaScript - Loops and Conditional",
            "youtube" : "XtKhAo9IO5Q"
        }
    ],
    "lti" : [
        {
            "title" : "Quiz: JavaScript",
            "launch" : "mod/gift/?quiz=JS-01-JavaScript.txt",
            "resource_link_id" : "js_01_javascript_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ],
    "references" : [
        {
            "title" : "Sample JavaScript Code Running",
            "href": "code/javascript"
        },
        {
            "title" : "Sample JavaScript code (Download ZIP)",
            "href" : "code/javascript.zip"
        },
        {
            "title" : "Bonus: Building JavaScript with with Brendan Eich",
            "href" : "https://www.youtube.com/watch?v=IPxQ9kEaF8c"
        }
    ]
},
{
    "title": "Object Oriented Programming in JavaScript",
    "anchor": "js-oo",
    "icon" : "fa-ethernet",
    "description": "We do a quick look at how the JavaScript language supports the Object-Oriented pattern.",
    "slides": "lectures/JS-02-JavaScript-Objects.ppt",
    "videos" :[
        {
            "title" : "JavaScript Object Oriented Concepts",
            "youtube" : "N_ZB9VnXDWo"
        },
        {
            "title" : "Building Classes and Objects in JavaScript",
            "youtube" : "DLWYj1_j1Is"
        }
    ],
    "references" : [
        {
            "title" : "Sample code running",
            "href" : "code/javascript-objects"
        },
        {
            "title" : "Sample code (Download ZIP)",
            "href" : "code/javascript-objects.zip"
        }
    ],
    "lti" : [
        {
            "title" : "Quiz: JavaScript Objects",
            "launch" : "mod/gift/?quiz=JS-02-Objects.txt",
            "resource_link_id" : "js_02_js_objects_quiz",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ]
},
{
    "title": "Classified Ads #2",
    "anchor": "dj4e_ads2",
    "icon" : "fa-code",
    "description": "We add pictures and comments to our classified ads application.",
    "assignment" : "{apphome}/assn/dj4e_ads2.md",
    "videos" : [
        {
            "title" : "Walking through the DJ4E Pictures (pics) Sample Code",
            "youtube" : "tanl9CthvHE"
        },
        {
            "title" : "Walking through the DJ4E Forums (forums) Sample Code",
            "youtube" : "mgcj3V56X-A"
        }
    ],
    "lti" : [
        {
        "title" : "Auto-grader: Ad List #2",
        "launch" : "tools/crud/",
        "resource_link_id" : "dj4e_ads2",
        "custom" : [
            {
                "key": "exercise",
                "value": "12adlist2.php"
            }
        ]
        }
    ],
    "references" : [
        {
            "title" : "Sample DJ4E Code",
            "href": "https://github.com/csev/dj4e-samples"
        },
        {
            "title" : "Adding Pictures",
            "href": "https://samples.dj4e.com/pics/"
        },
        {
            "title" : "Forums and Comments",
            "href": "https://samples.dj4e.com/forums/"
        },
        {
            "title" : "Reference Implementation",
            "href": "https://chucklist.dj4e.com/m2"
        }
    ]
},
{
    "title": "jQuery",
    "anchor": "jquery",
    "icon" : "fa-briefcase",
    "description": "This is a brief introduction to the jQuery library which is widely used to do in-browser manipulation of the Document Object Model(DOM) and event handling.",
    "slides": "lectures/JS-03-JQuery.ppt",
    "videos" : [
        {
            "title" : "jQuery and the Document Object Model",
            "youtube" : "GjvhybOHImk"
        },
        {
            "title" : "Walking through the DJ4E jQuery DOM sample code",
            "youtube" : "XClRHt71qGw"
        },
        {
            "title" : "Using jQuery",
            "youtube" : "G9gXLF-EPcM"
        },
        {
            "title" : "Walking through the DJ4E jQuery setup sample code",
            "youtube" : "xI4axL8cyVU"
        },
        {
            "title" : "Walking through the DJ4E jQuery events sample code",
            "youtube" : "7E4KBoE2uRM"
        },
        {
            "title" : "Walking through the DJ4E jQuery DOM modification sample code",
            "youtube" : "qCFklryOSqs"
        }
    ],
    "references" :
    [
        {
            "title" : "Sample code running",
            "href" : "code/jquery"
        },
        {
            "title" : "Sample code (Download ZIP)",
            "href" : "code/jquery.zip"
        },
        {
            "title" : "Bonus: John Resig - Building jQuery",
            "href" : "https://www.youtube.com/watch?v=B7Aut4OUuvs"
        }
    ],
    "lti" : [
        {
            "title" : "Quiz: jQuery",
            "launch" : "mod/gift/?quiz=JS-03-JQuery.txt",
            "resource_link_id" : "js_03_jquery",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ]
},
{
    "title": "JSON / AJAX",
    "anchor": "json",
    "icon" : "fa-file-archive",
    "description": "In this section we look at JavaScript Object Notation (JSON).  JSON is commonly used as a syntax to exchange data between code running on the server (i.e. in Django) and code running in the browser (JavaScript/jQuery).",
    "slides": "lectures/JS-04-JSON.ppt",
    "videos" : [
        {
            "title" : "JSON - JavaScript Object Notation",
            "youtube" : "8ifl_tEVVvY"
        },
        {
            "title" : "Walking through the DJ4E JSON Sample Code",
            "youtube" : "rYOdxeFYaFA"
        },
        {
            "title" : "Building an AJAX Chat with Django",
            "youtube" : "FDf69yaSH8A"
        },
        {
            "title" : "Walking through the DJ4E JSON (chat) Sample Code",
            "youtube" : "OqtEgkYbmCo"
        }
    ],
    "references" : [
        {
            "title" : "Bonus: Douglas Crockford - Discovering JSON",
            "href" : "https://www.youtube.com/watch?v=kc8BAR7SHJI"
        },
        {
            "title" : "Sample implementation - JSON CHAT",
            "href" : "https://samples.dj4e.com/"
        },
        {
            "title" : "Sample code - JSON Chat",
            "href" : "https://github.com/csev/dj4e-samples/tree/master/chat"
        }
    ],
    "lti" : [
        {
            "title" : "Quiz: JSON",
            "launch" : "mod/gift/?quiz=JS-04-JSON.txt",
            "resource_link_id" : "js_04_json",
            "custom" : [
                {
                    "key": "tries",
                    "value": "101"
                },
                {
                    "key": "delay",
                    "value": "601"
                }
            ]
        }
    ]
},
{
    "title": "Classified Ads #3",
    "anchor": "dj4e_ads3",
    "icon" : "fa-newspaper",
    "description": "We add favorites to our classified ads application.",
    "videos" : [
    {
        "title": "DJ4E Samples Walkthrough - Favicon",
        "youtube": "C1WGD5hFdT8"
    },
    {
        "title": "DJ4E Samples Walkthrough - Social Login",
        "youtube": "NctpQ-2Kdtw"
    },
    {
        "title": "DJ4E Samples Walkthrough - Favorites",
        "youtube": "6cq-ehBHkwc"
    }
   ],
    "assignment" : "{apphome}/assn/dj4e_ads3.md",
    "lti" : [
        {
        "title" : "Auto-grader: Ad List #3",
        "launch" : "tools/crud/",
        "resource_link_id" : "dj4e_ads3",
        "custom" : [
            {
                "key": "exercise",
                "value": "13adlist3.php"
            }
        ]
        },
        {
        "title": "Peer Graded: Ads3 User Interface",
        "launch" : "mod/peer-grade/",
        "resource_link_id" : "peer_ads_3",
        "custom" : [
            {
                "key": "config",
                "json":
{
  "title": "Ads3 Look and Feel",
  "description": "This is an assignment to make sure that your user interface properly supports the stars in the favorites.",
  "grading": "This assignment is worth 10 points. 6 points come from your peers and 4 points come from you grading other student's submissions. Don't take off points for little mistakes.  If they seem to have done the assignment give them full credit.   Feel free to make suggestions if there are small mistakes.  Please keep your comments positive and useful.  If you do not take grading seriously, the instructors may delete your response and you will lose points.",
  "parts": [
    {
      "title": "Image (JPG or PNG) of your home (all ads) page showing at least two stars filled in (Maximum 2MB per file)",
      "type": "image"
    },
    {
      "title": "Image (JPG or PNG) of your home (all ads) page showing at least two stars not-filled in (Maximum 2MB per file)",
      "type": "image"
    }
  ],
  "gallery": "off",
  "totalpoints": "10",
  "instructorpoints": "0",
  "peerpoints": "6",
  "rating": "0",
  "assesspoints": "2",
  "minassess": "2",
  "maxassess": "5",
  "resubmit": "always",
  "autopeer": "300000",
  "notepublic": "false",
  "flag": "true",
  "galleryformat": "card"
}
            }
        ]
        }
    ],
    "references" : [
        {
            "title" : "Sample Code on Github",
            "href": "https://github.com/csev/dj4e-samples"
        },
        {
            "title" : "Social Login with Github",
            "href": "https://python-social-auth.readthedocs.io/en/latest/configuration/django.html"
        },
        {
            "title" : "Sample Code Server",
            "href": "https://samples.dj4e.com/"
        },
        {
            "title" : "Reference Implementation",
            "href": "https://chucklist.dj4e.com/m3"
        }
    ]
},
{
    "title": "Classified Ads #4",
    "anchor": "dj4e_ads4",
    "icon" : "fa-search",
    "description": "We add search a feature our classified ads application.",
    "todo" : "Add tags, drop down autofill, auto add",
    "videos" : [
    {
        "title": "DJ4E Samples Walkthrough - search (well)",
        "youtube": "4pOExZHnL9k"
    },
    {
        "title": "DJ4E Samples Walkthrough - myarts (review)",
        "youtube" : "iHvJZ_lvXB4"
    }
   ],
    "assignment" : "{apphome}/assn/dj4e_ads4.md",
    "lti" : [
        {
        "title" : "Auto-grader: Ad List #4",
        "launch" : "tools/crud/",
        "resource_link_id" : "dj4e_ads4",
        "custom" : [
            {
                "key": "exercise",
                "value": "14adlist4.php"
            }
        ]
        },
        {
        "title": "Peer Graded: Ads4 User Interface",
        "launch" : "mod/peer-grade/",
        "resource_link_id" : "peer_ads_4",
        "custom" : [
            {
                "key": "config",
                "json":
{
  "title": "Ads4 Look and Feel",
  "description": "This is an assignment to make sure that your user interface properly supports the stars in the favorites.",
  "grading": "This assignment is worth 10 points. 6 points come from your peers and 4 points come from you grading other student's submissions. Don't take off points for little mistakes.  If they seem to have done the assignment give them full credit.   Feel free to make suggestions if there are small mistakes.  Please keep your comments positive and useful.  If you do not take grading seriously, the instructors may delete your response and you will lose points.",
  "parts": [
    {
      "title": "Image (JPG or PNG) of your home (all ads) page including the url / address bar without a search active (Maximum 2MB per file)",
      "type": "image"
    },
    {
      "title": "Image (JPG or PNG) of your home (all ads) page including the url / address bar with a search active (Maximum 2MB per file)",
      "type": "image"
    }
  ],
  "gallery": "off",
  "totalpoints": "10",
  "instructorpoints": "0",
  "peerpoints": "6",
  "rating": "0",
  "assesspoints": "2",
  "minassess": "2",
  "maxassess": "5",
  "resubmit": "always",
  "autopeer": "300000",
  "notepublic": "false",
  "flag": "true",
  "galleryformat": "card"
}
            }
        ]
        }
    ],
    "references" : [
        {
            "title" : "Sample Code on Github",
            "href": "https://github.com/csev/dj4e-samples"
        },
        {
            "title" : "Sample Code Server",
            "href": "https://samples.dj4e.com/"
        },
        {
            "title" : "Reference Implementation",
            "href": "https://chucklist.dj4e.com/m4"
        }
    ]
},
{
    "title": "CRUD Practice",
    "hidden": true,
    "anchor": "dj4e_crud2",
    "icon" : "fa-database",
    "description": "Some CRUD Exercises.",
    "lti" : [
        {
        "title" : "Auto-grader: Autos CRUD Practice",
        "launch" : "tools/crud/",
        "resource_link_id" : "dj4e_crud2_autos",
        "custom" : [
            {
                "key": "exercise",
                "value": "20autos.php"
            }
        ]
        },
        {
        "title" : "Auto-grader: Cats CRUD Practice",
        "launch" : "tools/crud/",
        "resource_link_id" : "dj4e_crud2_cats",
        "custom" : [
            {
                "key": "exercise",
                "value": "20cats.php"
            }
        ]
        }
    ],
    "references" : [
        {
            "title" : "Specification - Autos CRUD Practice",
            "href": "tools/crud/02spec.php?assn=20autos.php"
        },
        {
            "title" : "Reference Implementation - Autos",
            "href": "https://chucklist.dj4e.com/autos"
        },
        {
            "title" : "Sample Exam - Cats CRUD Practice",
            "href": "tools/crud/02spec.php?assn=20cats.php"
        },
        {
            "title" : "Reference Implementation - Cats",
            "href": "https://chucklist.dj4e.com/cats"
        },
        {
            "title" : "Sample Code on Github",
            "href": "https://github.com/csev/dj4e-samples"
        }
    ]
},
{
    "title": "Project Overview",
    "anchor": "pr_description",
    "icon" : "fa-address-card",
    "description": "Introduce your project to the rest of the class.",
    "assignment" : "{apphome}/project/01_description.md",
    "references" : [
        {
            "title" : "Project Specification",
            "href" : "{apphome}/project/00_overview.md"
        },
        {
            "title" : "Sample Projects",
            "href" : "https://projects.dj4e.com"
        }
    ],
    "lti" : [
        {
        "title": "Peer Graded: Project Description",
        "launch" : "mod/peer-grade/",
        "resource_link_id" : "pr_description",
        "custom" : [
            {
                "key": "config",
                "json":
{
  "title": "Milestone 1: Describe Your Project",
  "description": "Please describe your proposed Django database-backed web site project in 1-2 paragraphs.   Talk about the scope of the project, similar web sites, the kind of data the project will store and show and the interactive elements that get data from logged-in end users.",
  "grading": "This assignment is worth 10 points. 6 points come from your peers and 4 points come from you grading other student's submissions. Don't take off points for little mistakes.  If they seem to have done the assignment give them full credit.   Feel free to make suggestions if there are small mistakes.  Please keep your comments positive and useful.  If you do not take grading seriously, the instructors may delete your response and you will lose points.",
  "parts": [
    {
      "title": "URL of your GitHub Repo - If it is private just put in your github account url and mention that your repo is private below",
      "type": "url"
    },
    {
      "title": "Please describe your project in a few paragraphs.",
      "type": "code",
      "code": "markup"
    }
  ],
  "gallery": "off",
  "totalpoints": "10",
  "instructorpoints": "0",
  "peerpoints": "6",
  "rating": "0",
  "assesspoints": "2",
  "minassess": "2",
  "maxassess": "5",
  "resubmit": "always",
  "autopeer": "300000",
  "notepublic": "false",
  "flag": "true",
  "galleryformat": "card"
}
            }
        ]
        }
        ]
},
{
    "title": "Project Milestone 2",
    "anchor": "pr_02_milestone",
    "icon" : "fa-comment",
    "description": "Introduce your project to the rest of the class.",
    "assignment" : "{apphome}/project/02_revision.md",
    "references" : [
        {
            "title" : "Project Specification",
            "href" : "{apphome}/project/00_overview.md"
        },
        {
            "title" : "Sample Projects",
            "href" : "https://projects.dj4e.com"
        }
    ],
    "lti" : [
        {
        "title": "Peer Graded: Project Revision",
        "launch" : "mod/peer-grade/",
        "resource_link_id" : "pr_02_milestone",
        "custom" : [
            {
                "key": "config",
                "json":
{
  "title": "Milestone 2: Revise your Project Description",
  "description": "For this milestone, you will revise your 1-2 paragraph summary of your project idea and add a short paragraph describing what the changes are and why you are making the changes.  If you are not making any changes briefly describe anything you have learned or improved on your description.",
  "grading": "This assignment is worth 10 points. 6 points come from your peers and 4 points come from you grading other student's submissions. Don't take off points for little mistakes.  If they seem to have done the assignment give them full credit.   Feel free to make suggestions if there are small mistakes.  Please keep your comments positive and useful.  If you do not take grading seriously, the instructors may delete your response and you will lose points.",
  "parts": [
    {
      "title": "URL of your GitHub Repo - If it is private just put in your github account url and mention that your repo is private below",
      "type": "url"
    },
    {
      "title": "Please describe your project (again) in a few paragraphs.",
      "type": "code",
      "code": "markup"
    }
  ],
  "gallery": "off",
  "totalpoints": "10",
  "instructorpoints": "0",
  "peerpoints": "6",
  "rating": "0",
  "assesspoints": "2",
  "minassess": "2",
  "maxassess": "5",
  "resubmit": "always",
  "autopeer": "300000",
  "notepublic": "false",
  "flag": "true",
  "galleryformat": "card"
}
            }
        ]
        }
        ]
},
{
    "title": "Project Milestone 3",
    "anchor": "pr_03_milestone",
    "icon" : "fa-comment",
    "description": "Design a first verson of the user interface (UI) for your project.",
    "assignment" : "{apphome}/project/03_userinterface.md",
    "references" : [
        {
            "title" : "Project Specification",
            "href" : "{apphome}/project/00_overview.md"
        },
        {
            "title" : "Sample Projects",
            "href" : "https://projects.dj4e.com"
        }
    ],
    "lti" : [
        {
        "title": "Peer Graded: UI Design (1)",
        "launch" : "mod/peer-grade/",
        "resource_link_id" : "pr_03_milestone",
        "custom" : [
            {
                "key": "config",
                "json":
{
  "title": "Milestone 3: User Interface Brainstorm",
  "description": "For this milestone, you will begin to develop the user interface for your project. Like in previous milestones, you will get a chance to revise your UI design and can still change it quite dramatically with no negative consequences.",
  "grading": "This assignment is worth 10 points. 6 points come from your peers and 4 points come from you grading other student's submissions. Don't take off points for little mistakes.  If they seem to have done the assignment give them full credit.   Feel free to make suggestions if there are small mistakes.  Please keep your comments positive and useful.  If you do not take grading seriously, the instructors may delete your response and you will lose points.",
  "parts": [
    {
      "title": "URL of your GitHub Repo - If it is private just put in your github account url and mention that your repo is private below",
      "type": "url"
    },
    {
      "title": "Please describe your UI Design images.  If you have less than 4 images, mention that here and upload an image of a cat, race car with cat ears, or somthing else fun and appropriate.",
      "type": "code",
      "code": "markup"
    },
    {
      "title": "UI Design Image (1)",
      "type": "image"
    },
    {
      "title": "UI Design Image (2)",
      "type": "image"
    },
    {
      "title": "UI Design Image (3)",
      "type": "image"
    },
    {
      "title": "UI Design Image (4)",
      "type": "image"
    }
  ],
  "gallery": "off",
  "totalpoints": "10",
  "instructorpoints": "0",
  "peerpoints": "6",
  "rating": "0",
  "assesspoints": "2",
  "minassess": "2",
  "maxassess": "5",
  "resubmit": "always",
  "autopeer": "300000",
  "notepublic": "false",
  "flag": "true",
  "galleryformat": "card"
}
            }
        ]
        }
        ]
},
{
    "title": "Project Milestone 4",
    "anchor": "pr_04_milestone",
    "icon" : "fa-comment",
    "description": "Design a first verson of the data model (UI) for your project.",
    "assignment" : "{apphome}/project/04_model.md",
    "references" : [
        {
            "title" : "Project Specification",
            "href" : "{apphome}/project/00_overview.md"
        },
        {
            "title" : "Sample Projects",
            "href" : "https://projects.dj4e.com"
        }
    ],
    "lti" : [
        {
        "title": "Peer Graded: Data Model",
        "launch" : "mod/peer-grade/",
        "resource_link_id" : "pr_04_milestone",
        "custom" : [
            {
                "key": "config",
                "json":
{
  "title": "Milestone 4: Data Model",
  "description": "For this milestone, you will begin to develop the data model for your project. Like in previous milestones, you will get a chance to revise your model and change it with no negative consequences.  You are likely to get valuable feedback on your submission from others that will help improve your model.",
  "grading": "This assignment is worth 10 points. 6 points come from your peers and 4 points come from you grading other student's submissions. Don't take off points for little mistakes.  If they seem to have done the assignment give them full credit.   Feel free to make suggestions if there are small mistakes.  Please keep your comments positive and useful.  If you do not take grading seriously, the instructors may delete your response and you will lose points.",
  "parts": [
    {
      "title": "URL of your GitHub Repo - If it is private just put in your github account url and mention that your repo is private below",
      "type": "url"
    },
    {
      "title": "Please describe your project in one paragraph so reviewers know what they are looking at.",
      "type": "code",
      "code": "markup"
    },
    {
      "title": "Data Model Image",
      "type": "image"
    },
    {
      "title": "The models.py file for your model.  Does not have to be complete and syntax errors are OK.  Focus on important conceptual things like foreign keys.",
      "type": "code",
      "code": "markup"
    }
  ],
  "gallery": "off",
  "totalpoints": "10",
  "instructorpoints": "0",
  "peerpoints": "6",
  "rating": "0",
  "assesspoints": "2",
  "minassess": "2",
  "maxassess": "5",
  "resubmit": "always",
  "autopeer": "300000",
  "notepublic": "false",
  "flag": "true",
  "galleryformat": "card"
}
            }
        ]
        }
        ]
},
{
    "title": "Project Milestone 5 - Project Review",
    "anchor": "pr_05_milestone",
    "icon" : "fa-comment",
    "description": "This is a project review to get feedback to help you for the final project submission.",
    "references" : [
        {
            "title" : "Project Specification",
            "href" : "{apphome}/project/00_overview.md"
        }
    ],
    "lti" : [
        {
        "title": "Peer Graded: Project Review",
        "launch" : "mod/peer-grade/",
        "resource_link_id" : "pr_05_milestone",
        "custom" : [
            {
                "key": "config",
                "json":
{
  "title": "Milestone 5: Project Review",
  "description": "For this milestone you will submit a description of your project, a URL, some screen shots, and optionally an account / password if needed so we can review your project work to date.  You will continue to work on and improve your project, taking the comments from this preer review as input to your work.   There will be a second and final review after this review.",
  "grading": "This assignment is worth 10 points. 4 points come from your peers and 4 points come from you grading other student's submissions. Don't take off points for little mistakes.  If they seem to have done the assignment give them full credit.   Feel free to make suggestions if there are small mistakes.  Please keep your comments positive and useful.  If you do not take grading seriously, the instructors may delete your response and you will lose points.",
  "parts": [
    {
      "title": "URL of your working web site.",
      "type": "url"
    },
    {
      "title": "Please describe your project in one paragraph so reviewers know what they are looking at.  Include an id/pw for your site if it is needed to review the site.",
      "type": "code",
      "code": "markup"
    },
    {
      "title": "A representative screen shot of your application",
      "type": "image"
    },
    {
      "title": "A second representative screen shot of your application",
      "type": "image"
    }
  ],
  "gallery": "off",
  "totalpoints": "10",
  "instructorpoints": "0",
  "peerpoints": "6",
  "rating": "0",
  "assesspoints": "2",
  "minassess": "2",
  "maxassess": "5",
  "resubmit": "always",
  "autopeer": "300000",
  "notepublic": "false",
  "flag": "true",
  "galleryformat": "card"
}
            }
        ]
        }
        ]
},
{
    "title": "Project Milestone 6 - Final Report",
    "anchor": "pr_06_milestone",
    "icon" : "fa-comment",
    "description": "This is the final project submission.",
    "references" : [
        {
            "title" : "Project Specification",
            "href" : "{apphome}/project/00_overview.md"
        }
    ],
    "lti" : [
        {
        "title": "Peer Graded: Final Project",
        "launch" : "mod/peer-grade/",
        "resource_link_id" : "pr_06_milestone",
        "custom" : [
            {
                "key": "config",
                "json":
{
  "title": "Milestone 6: Final Project",
  "description": "For this milestone you will submit a description of your project, a URL, some screen shots, and optionally an account / password if needed so we can review your project.",
  "grading": "This assignment is worth 10 points. 4 points come from your peers and 4 points come from you grading other student's submissions. Don't take off points for little mistakes.  If they seem to have done the assignment give them full credit.   Feel free to make suggestions if there are small mistakes.  Please keep your comments positive and useful.  If you do not take grading seriously, the instructors may delete your response and you will lose points.",
  "parts": [
    {
      "title": "URL of your working web site.",
      "type": "url"
    },
    {
      "title": "Please describe your project in one paragraph so reviewers know what they are looking at.  Include an id/pw for your site if it is needed to review the site.  Also include your github URL if it is public. Also indicate if you would be willing to be included in a public gallery of student projects. (not required)",
      "type": "code",
      "code": "markup"
    },
    {
      "title": "A representative screen shot of your application",
      "type": "image"
    },
    {
      "title": "A second representative screen shot of your application",
      "type": "image"
    }
  ],
  "gallery": "off",
  "totalpoints": "10",
  "instructorpoints": "0",
  "peerpoints": "6",
  "rating": "0",
  "assesspoints": "2",
  "minassess": "2",
  "maxassess": "5",
  "resubmit": "always",
  "autopeer": "300000",
  "notepublic": "false",
  "flag": "true",
  "galleryformat": "card"
}
            }
        ]
        }
        ]
}

]
}
